{"version":3,"sources":["context/index.js","services/storage.js","context/Provider.jsx","images/perguntas.png","pages/Login.jsx","components/Header.jsx","pages/Home.jsx","components/Confirmação.jsx","services/index.js","components/Jogo.jsx","pages/Game.jsx","pages/Relatorio.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyContext","createContext","getRelatorio","JSON","parse","localStorage","getItem","Provider","children","useState","user","setUser","data","setData","quantidade","setQuantidade","questions","setQuestions","start","setStart","storage","setStorage","useEffect","relatorio","length","setItem","stringify","contextValue","value","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","fullPage","height","width","display","flexDirection","alignItems","justifyContent","backgroundImage","paddingTop","card","backgroundColor","borderRadius","padding","boxShadow","image","maxWidth","theme","createTheme","Login","classes","useContext","usuario","setUsuario","tem","setTem","navigate","useNavigate","ThemeProvider","Box","className","size","Container","CssBaseline","Grid","container","item","xs","lg","md","sm","style","src","perguntas","alt","component","onSubmit","event","preventDefault","trim","FormData","currentTarget","nome","noValidate","sx","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","Button","type","mb","Header","AppBar","Toolbar","flexGrow","link","marginTop","Home","max","setMax","min","setMin","palette","primary","main","secondary","InputLabelProps","shrink","onClick","ariant","to","Confirmação","loading","marginBottom","disabled","getQuestions","a","fetch","response","json","results","Jogo","currentQuestion","setCurrentQuestion","setPerguntas","score","setScore","showAnswer","setShowAnswer","certo","setCerto","errou","setErrou","choose","setChoose","pergunta","question","resposta","correta","correct_answer","alternativa","respostaCorreta","array","incorrect_answers","randomIndex","currentIndex","Math","floor","random","shuffle","console","log","spacing","decode","map","index","startIcon","Game","setLoading","then","minHeight","grid","cardRelatorio","Relatorio","App","basename","process","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30112242.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst MyContext = createContext();\r\n\r\nexport default MyContext;","export const createUser = (nome) => localStorage.setItem('usuario', nome);\r\n\r\nexport const getUser = () => localStorage.getItem('usuario')\r\n\r\nexport const createRelatorio = (relatorio) => localStorage.setItem('relatorio', JSON.stringify(relatorio));\r\n\r\nexport const getRelatorio = () => JSON.parse(localStorage.getItem('relatorio'))","import React, {useState, useEffect} from 'react'\r\nimport Context from '.';\r\nimport { createRelatorio } from '../services/storage';\r\n\r\nfunction Provider({ children }) {\r\n  const [user, setUser] = useState('Usuário');\r\n  const [data, setData] = useState('');\r\n  const [quantidade, setQuantidade] = useState(1);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [start, setStart] = useState(false);\r\n  const [storage, setStorage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(storage.length > 0) {\r\n      createRelatorio(storage);\r\n    }\r\n  }, [storage]);\r\n\r\n  \r\n  \r\n  const contextValue = {\r\n    user,\r\n    setUser,\r\n    data,\r\n    setData,\r\n    quantidade,\r\n    setQuantidade,\r\n    questions,\r\n    setQuestions,\r\n    start,\r\n    setStart,\r\n    storage,\r\n    setStorage,\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={contextValue}>\r\n      { children }\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Provider;\r\n","export default __webpack_public_path__ + \"static/media/perguntas.8a9cfe6d.png\";","import React, {useContext, useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport perguntas from '../images/perguntas.png';\r\nimport { Grid } from '@mui/material';\r\nimport MyContext from '../context';\r\nimport { useNavigate } from 'react-router';\r\nimport { createUser } from '../services/storage';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://paulorenan.github.io/app-perguntas/\">\r\n        App Perguntas\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  fullPage: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: 'linear-gradient(to right, #f6d365, #fda085)',\r\n    paddingTop: '0',\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '10px',\r\n    padding: '20px',\r\n    boxShadow: '0px 0px 10px 0px rgba(0,0,0,0.2)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n  },\r\n});\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const { setUser, setData } = useContext(MyContext);\r\n  const [usuario, setUsuario] = useState('');\r\n  const [tem, setTem] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (usuario.trim() === '') {\r\n      setTem(true);\r\n    } else {\r\n      const data = new FormData(event.currentTarget);\r\n      setData(data);\r\n      setUser(usuario);\r\n      createUser(usuario);\r\n      navigate('/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box className={classes.fullPage} size=\"xl\">\r\n        <Container maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            className={classes.card}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12} lg={12} md={12} sm={12}>\r\n                <Box style={{ width: '100%' }}>\r\n                  <img src={perguntas} alt=\"perguntas\" className={classes.image}/>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Entrar\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"nome\"\r\n                label=\"Nome\"\r\n                name=\"nome\"\r\n                autoComplete=\"nome\"\r\n                autoFocus\r\n                onChange={ (e) => { setUsuario(e.target.value) } }\r\n              />\r\n              {tem && <p style={{ color: 'red' }}>Preencha o campo nome</p>}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Entrar\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <Copyright sx={{ mt: 8, mb: 4 }} />\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport perguntas from '../images/perguntas.png'\r\nimport { getUser } from '../services/storage';\r\n\r\nfunction Header() {\r\n  const user = getUser()\r\n  return (\r\n      <AppBar>\r\n        <Toolbar>\r\n          <img src={perguntas} alt=\"perguntas\" style={{height: '50px'}}/>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Typography variant=\"h6\" component=\"div\">\r\n            {`Olá ${user === null ? 'Jogador' : user }`}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, {useContext, useState} from 'react'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Header from '../components/Header';\r\nimport { Container, CssBaseline, Typography } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport MyContext from '../context';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRelatorio } from '../services/storage';\r\n\r\nconst useStyles = makeStyles({\r\n  fullPage: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: 'linear-gradient(to right, #f6d365, #fda085)',\r\n    paddingTop: '0',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    maxWidth: '550px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  link: {\r\n    color: 'black',\r\n    marginTop: '10px',\r\n  },\r\n});\r\n\r\nfunction Home() {\r\n  const { setQuantidade, quantidade, storage } = useContext(MyContext);\r\n  const [max, setMax] = useState(false);\r\n  const [min, setMin] = useState(false);\r\n  const relatorio = getRelatorio();\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#00bcd4',\r\n      },\r\n      secondary: {\r\n        main: '#f50057',\r\n      },\r\n    },\r\n  });\r\n\r\n  const onClick = () => {\r\n    setMax(false);\r\n    setMin(false);\r\n    if (quantidade > 40) {\r\n      setMax(true);\r\n    } else if (quantidade < 1) {\r\n      setMin(true);\r\n    } else {\r\n      navigate('/game');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box className={classes.fullPage}>\r\n        <Header />\r\n        <Container maxWidth=\"sm\">\r\n          <CssBaseline />\r\n          <Box className={classes.card}>\r\n            <h1>Bem vindo ao jogo de Perguntas</h1>\r\n            <h2>Selecione a quantidade de perguntas</h2>\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Quantidade\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"40\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={(e) => setQuantidade(e.target.value)}\r\n            />\r\n            {max && <p style={{color: 'red'}}>Quantidade máxima é 40</p>}\r\n            {min && <p style={{color: 'red'}}>Quantidade mínima é 1</p>}\r\n            <Button \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{marginTop: '20px'}}\r\n              onClick={onClick}>\r\n              Continuar\r\n            </Button>\r\n            {(relatorio !== null && relatorio.length > 0) && <Typography ariant=\"body2\" color=\"text.secondary\" align=\"center\" style={{marginTop: '20px'}}>\r\n              <Link to=\"/relatorio\" className={classes.link}>\r\n                Ver relatório anterior.\r\n              </Link>\r\n              </Typography>}\r\n            </Box>\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, {useContext} from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MyContext from '../context';\r\nimport { Button, Container, CssBaseline } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n});\r\n\r\n// function to get the date in the format DD--MM--YYYY\r\nfunction getDate() {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth() + 1;\r\n  const year = date.getFullYear();\r\n  return `${day}/${month}/${year}`;\r\n}\r\n\r\nfunction Confirmação({loading}) {\r\n  const { quantidade, setStart, setStorage } = useContext(MyContext);\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <Box className={classes.card}>\r\n        <h2 style={{marginBottom: '0'}}>Você escolheu responder {quantidade} {quantidade > 1 ? 'perguntas' : 'pergunta'}</h2>\r\n        <p>\r\n          Clique no botão abaixo para começar.\r\n        </p>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {setStorage([]);setStart(true)}}\r\n          disabled={loading}\r\n        >\r\n          Começar\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{marginTop: '20px'}}\r\n          onClick={() => navigate('/home')}\r\n        >\r\n          Voltar\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirmação\r\n","export const getQuestions = async (quantidade) => {\r\n  const response = await fetch(`https://opentdb.com/api.php?amount=${quantidade}`)\r\n  const data = await response.json()\r\n  return data.results\r\n}","import React, {useContext, useState, useEffect} from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MyContext from '../context';\r\nimport { Button, Container, CssBaseline } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Grid } from '@mui/material';\r\nimport {decode} from 'html-entities'\r\nimport RightIcon from '@mui/icons-material/Check';\r\nimport WrongIcon from '@mui/icons-material/Clear';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    maxWidth: '550px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n});\r\n\r\nfunction Jogo() {\r\n  const { questions, storage, setStorage } = useContext(MyContext);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [perguntas, setPerguntas] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [certo, setCerto] = useState(false);\r\n  const [errou, setErrou] = useState(false);\r\n  const [choose, setChoose] = useState('');\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const array = [...questions[currentQuestion].incorrect_answers, questions[currentQuestion].correct_answer];\r\n    setPerguntas(shuffle(array));\r\n  }, [currentQuestion, questions]);\r\n\r\n  async function proximaPergunta() {\r\n    await setStorage([...storage, {\r\n      pergunta: questions[currentQuestion].question,\r\n      resposta: choose,\r\n      correta: questions[currentQuestion].correct_answer,\r\n      alternativa: [...perguntas],\r\n      respostaCorreta: questions[currentQuestion].correct_answer === choose ? true : false\r\n    }]);\r\n    if (currentQuestion < questions.length - 1) {\r\n      setShowAnswer(false);\r\n      setCerto(false);\r\n      setErrou(false);\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      localStorage.setItem('score', score);\r\n      navigate('/relatorio');\r\n    }\r\n  }\r\n\r\n  function shuffle(array) {\r\n    let currentIndex = array.length,  randomIndex;\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {console.log(questions)}\r\n      <CssBaseline />\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Box className={classes.card}>\r\n            <h3 style={{marginBottom: '0', marginTop: '10px'}}>{`Score: ${score}/${questions.length}`}</h3>\r\n            <h1 style={{marginBottom: '0'}}>{`Pergunta ${currentQuestion +1} de ${questions.length}`}</h1>\r\n            <p>{decode(questions[currentQuestion].question)}</p>\r\n            {perguntas.map((pergunta, index) => {\r\n              if(pergunta === questions[currentQuestion].correct_answer) {\r\n                return (\r\n                  <Button\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setScore(score + 1);\r\n                      setShowAnswer(true);\r\n                      setCerto(true);\r\n                      setChoose(pergunta);\r\n                    }}\r\n                    disabled={showAnswer}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{marginBottom: '10px'}}\r\n                    {...(showAnswer && {style: {backgroundColor: '#4caf50', color: 'black', marginBottom: '10px'}})}\r\n                    {...(showAnswer && choose === pergunta && {startIcon: <RightIcon />})}\r\n                  >\r\n                    {decode(pergunta)}\r\n                  </Button>\r\n                )\r\n              } else {\r\n                return (\r\n                  <Button\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setShowAnswer(true);\r\n                      setErrou(true);\r\n                      setChoose(pergunta);\r\n                    }}\r\n                    disabled={showAnswer}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{marginBottom: '10px'}}\r\n                    {...(showAnswer && {style: {backgroundColor: '#f44336', color: 'black', marginBottom: '10px'}})}\r\n                    {...(showAnswer && choose === pergunta && {startIcon: <WrongIcon />})}\r\n                  >\r\n                    {decode(pergunta)}\r\n                  </Button>\r\n                )\r\n              }\r\n              }\r\n            )}\r\n            {showAnswer && certo && <p style={{marginTop: '0'}}>Resposta correta!</p>}\r\n            {showAnswer && errou && <p style={{marginTop: '0'}}>Resposta errada!</p>}\r\n            {showAnswer && <Button onClick={proximaPergunta} variant='contained'>{currentQuestion === questions.length -1 ? 'Ver Relatório' : 'Próxima Pergunta'}</Button>}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Jogo\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport Header from '../components/Header';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MyContext from '../context';\r\nimport Confirmação from '../components/Confirmação';\r\nimport { getQuestions } from '../services';\r\nimport Jogo from '../components/Jogo';\r\n\r\nconst useStyles = makeStyles({\r\n  fullPage: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: 'linear-gradient(to right, #f6d365, #fda085)',\r\n    paddingTop: '0',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    maxWidth: '550px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n});\r\n\r\nfunction Game() {\r\n  const { quantidade, questions, setQuestions, start, setStart} = useContext(MyContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const classes = useStyles();\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#00bcd4',\r\n      },\r\n      secondary: {\r\n        main: '#f50057',\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getQuestions(quantidade).then(response => {\r\n      setQuestions(response);\r\n    });\r\n  }, [quantidade, setQuestions]);\r\n\r\n  useEffect(() => {\r\n    setStart(false);\r\n  }, [setStart]);\r\n\r\n  useEffect(() => {\r\n    if (questions.length > 0) {\r\n      setLoading(false);\r\n    }\r\n  }, [questions, setLoading]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box className={classes.fullPage}>\r\n        <Header />\r\n        {start ? <Jogo /> : <Confirmação loading={loading}/>}\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Game;\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport Header from '../components/Header';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { getRelatorio } from '../services/storage';\r\nimport {decode} from 'html-entities'\r\nimport { CssBaseline, Button, Grid } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RightIcon from '@mui/icons-material/Check';\r\nimport WrongIcon from '@mui/icons-material/Clear';\r\n\r\nconst useStyles = makeStyles({\r\n  fullPage: {\r\n    minHeight: '100vh',\r\n    height: 'auto',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: 'linear-gradient(to right, #f6d365, #fda085)',\r\n    paddingTop: '0',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    maxWidth: '550px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  grid: {\r\n    padding: '20px',\r\n  },\r\n  cardRelatorio: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    maxWidth: '550px',\r\n    margin: 'auto',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n    marginTop: '85px',\r\n  },\r\n});\r\n\r\nfunction Relatorio() {\r\n  const [perguntas, setPerguntas] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#00bcd4',\r\n      },\r\n      secondary: {\r\n        main: '#f50057',\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const relatorio = getRelatorio();\r\n    if (relatorio) {\r\n      setPerguntas(relatorio);\r\n    }\r\n    const score = localStorage.getItem('score');\r\n    if (score) {\r\n      setScore(score);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box className={classes.fullPage}>\r\n        <Header />\r\n        {perguntas.length === 0 ? \r\n          <Box className={classes.cardRelatorio}>\r\n            <h1>Não tem Relatório</h1>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/home')}>\r\n              Voltar\r\n            </Button>\r\n          </Box>\r\n        : \r\n        <>\r\n          <Box className={classes.cardRelatorio}>\r\n            <h1 style={{marginBottom: '0'}}>Relatório</h1>\r\n            <p>Voce acertou {score} de {perguntas.length} {perguntas.length > 1 ? 'perguntas' : 'pergunta'}.</p>\r\n          </Box>\r\n          <Grid container spacing={2} className={classes.grid}>\r\n          <CssBaseline />\r\n            {perguntas.map((pergunta, index) => (\r\n              <Grid item xs={12} lg={4} md={4} sm={6} key={index}>\r\n                <CssBaseline />\r\n                <Box className={classes.card}>\r\n                  <h1>Pergunta {index + 1} de {perguntas.length}</h1>\r\n                  <p>{decode(pergunta.pergunta)}</p>\r\n                  {pergunta.alternativa.map((alt, index) => {\r\n              if(alt === pergunta.correta) {\r\n                return (\r\n                  <Button\r\n                    key={index}\r\n                    disabled='true'\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{marginBottom: '10px', backgroundColor: '#4caf50', color: 'black' }}\r\n                    startIcon={alt === pergunta.resposta && <RightIcon />}\r\n                  >\r\n                    {decode(alt)}\r\n                  </Button>\r\n                )\r\n              } else {\r\n                return (\r\n                  <Button\r\n                    key={index}\r\n                    disabled='true'\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{marginBottom: '10px', backgroundColor: '#f44336', color: 'black',}}\r\n                    startIcon={alt === pergunta.resposta && <WrongIcon />}\r\n                  >\r\n                    {decode(alt)}\r\n                  </Button>\r\n                )\r\n              }\r\n              }\r\n            )}\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/home')} style={{marginBottom: '30px'}}>\r\n            Voltar\r\n          </Button>\r\n        </>\r\n        }\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Relatorio\r\n","import Provider from \"./context/Provider\";\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Login from \"./pages/Login\";\r\nimport Home from \"./pages/Home\";\r\nimport Game from \"./pages/Game\";\r\nimport Relatorio from \"./pages/Relatorio\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Login />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/game\" element={<Game />} />\r\n          <Route path=\"/relatorio\" element={<Relatorio />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}